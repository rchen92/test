在https://edelivery.oracle.com/osdc/faces/SearchSoftware下载Oracle-Linux-7-Update-1-for-x86_64 (64 bit)V74844-01.iso

硬盘给的有60G
安装分区：
/boot	100M
swap	4G
/tmp	4G
/	22G
/u01	剩下的全部给oracle软件安装用（u01目录是常见的数据库目录（数据库的根目录））

[root@oracle ~]# mkdir /mnt/base
[root@oracle ~]# cat /etc/yum.repos.d/base.repo 
[base]						    
name=base					 
baseurl=file:///mnt/base
gpgcheck=0					     
enabled=1					     
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-oracle
[root@oracle ~]# mount -t iso9660 -o loop /root/oraclelinux68.iso /mnt/base
[root@oracle ~]# vim /etc/hosts
192.168.56.12	oracle
[root@oracle ~]# mount -t tmpfs shmfs -o	size=10g /dev/shm		#修改shm
[root@oracle ~]# vim /etc/fstab		#在最后一行加入
/root/oraclelinux68.iso /mnt/base	iso9660	 loop 0 0
shmfs			/dev/shm		tmpfs	size=10g	0
[root@oracle ~]# df -h /dev/shm/		#检查
Filesystem	      Size  Used Avail Use% Mounted on
shmfs		       10G     0   10G	 0% /dev/shm
[root@oracle ~]# uname -m		#检查版本（这一步很重要）
x86_64
[root@oracle ~]# df -h /tmp/		#检查tmp
Filesystem              Size  Used Avail Use% Mounted on
/dev/mapper/rhel-lvtmp  4.0G   33M  4.0G   1% /tmp


#要检查我们安装的是11.2.x.x 下面这些包
binutils-2.17.50.0.6
compat-libstdc++-33-3.2.3
elfutils-libelf-0.125
elfutils-libelf-devel-0.125
gcc-4.1.2
gcc-c++-4.1.2
glibc-2.5-24
glibc-common-2.5
glibc-devel-2.5
glibc-headers-2.5
ksh-20060214
libaio-0.3.106
libaio-devel
libgcc-4.1.2
libstdc++-4.1.2
libstdc++-devel-4.1.2
make-3.81
sysstat-7.0.2

[root@oracle-rhel7 ~]# rpm -qa| grep binutils
binutils-2.23.52.0.1-30.el7.x86_64
[root@oracle-rhel7 ~]# rpm -qa| grep compat-libstdc
compat-libstdc++-33-3.2.3-72.el7.x86_64
[root@oracle-rhel7 ~]# rpm -qa| grep elfutils
elfutils-libelf-0.160-1.el7.x86_64
elfutils-0.160-1.el7.x86_64
elfutils-libs-0.160-1.el7.x86_64     
[root@oracle-rhel7 ~]# yum install elfutils-libelf-devel.x86_64 
[root@oracle-rhel7 ~]# rpm -qa| grep gcc
gcc-c++-4.8.3-9.el7.x86_64
libgcc-4.8.3-9.el7.x86_64
gcc-4.8.3-9.el7.x86_64
gcc-gfortran-4.8.3-9.el7.x86_64
[root@oracle-rhel7 ~]# rpm -qa| grep glibc
glibc-common-2.17-78.el7.x86_64
glibc-2.17-78.el7.x86_64
glibc-devel-2.17-78.el7.x86_64
compat-glibc-2.12-4.el7.x86_64
glibc-headers-2.17-78.el7.x86_64
compat-glibc-headers-2.12-4.el7.x86_64
[root@oracle-rhel7 ~]# rpm -qa| grep ksh
[root@oracle-rhel7 ~]# yum install ksh
[root@oracle ~]# rpm -qa| grep libaio
libaio-0.3.109-12.el7.x86_64
[root@oracle ~]# rpm -qa| grep unixODBC
[root@oracle ~]# rpm -qa| grep sysstat
sysstat-10.1.5-7.el7.x86_64
[root@oracle ~]# yum install unixODBC
[root@oracle ~]# yum install unixODBC-devel

#还有一种方法，创建文本方式检测
vi checkrpm.sh
rpm -q --qf '%{NAME}-%{VERSION}-%{RELEASE} (%{ARCH})\n' \binutils
rpm -q --qf '%{NAME}-%{VERSION}-%{RELEASE} (%{ARCH})\n' \compat-libstdc++-33
rpm -q --qf '%{NAME}-%{VERSION}-%{RELEASE} (%{ARCH})\n' \elfutils-libelf
rpm -q --qf '%{NAME}-%{VERSION}-%{RELEASE} (%{ARCH})\n' \elfutils-libelf-devel
rpm -q --qf '%{NAME}-%{VERSION}-%{RELEASE} (%{ARCH})\n' \gcc
rpm -q --qf '%{NAME}-%{VERSION}-%{RELEASE} (%{ARCH})\n' \gcc-c++
rpm -q --qf '%{NAME}-%{VERSION}-%{RELEASE} (%{ARCH})\n' \glibc
rpm -q --qf '%{NAME}-%{VERSION}-%{RELEASE} (%{ARCH})\n' \glibc-common
rpm -q --qf '%{NAME}-%{VERSION}-%{RELEASE} (%{ARCH})\n' \glibc-devel
rpm -q --qf '%{NAME}-%{VERSION}-%{RELEASE} (%{ARCH})\n' \glibc-headers
rpm -q --qf '%{NAME}-%{VERSION}-%{RELEASE} (%{ARCH})\n' \ksh
rpm -q --qf '%{NAME}-%{VERSION}-%{RELEASE} (%{ARCH})\n' \libaio
rpm -q --qf '%{NAME}-%{VERSION}-%{RELEASE} (%{ARCH})\n' \libaio-devel
rpm -q --qf '%{NAME}-%{VERSION}-%{RELEASE} (%{ARCH})\n' \libgcc
rpm -q --qf '%{NAME}-%{VERSION}-%{RELEASE} (%{ARCH})\n' \libstdc++
rpm -q --qf '%{NAME}-%{VERSION}-%{RELEASE} (%{ARCH})\n' \libstdc++-devel
rpm -q --qf '%{NAME}-%{VERSION}-%{RELEASE} (%{ARCH})\n' \make
rpm -q --qf '%{NAME}-%{VERSION}-%{RELEASE} (%{ARCH})\n' \sysstat
rpm -q --qf '%{NAME}-%{VERSION}-%{RELEASE} (%{ARCH})\n' \unixODBC
rpm -q --qf '%{NAME}-%{VERSION}-%{RELEASE} (%{ARCH})\n' \unixODBC-devel
[root@oracle ~]# sh checkrpm.sh | grep not
package compat-libstdc++-33 is not installed
package ksh is not installed
[root@oracle64 ~]# yum install compat-libstdc++-33.x86_64 -y
[root@oracle ~]# yum install ksh -y


#接下来开始创建组和用户
[root@oracle ~]#	groupadd oinstall
[root@oracle ~]#	groupadd -g 502	dba
[root@oracle ~]#	groupadd -g 503	oper
[root@oracle ~]#	groupadd -g 504	asmadmin
[root@oracle ~]#	groupadd -g 505	asmoper
[root@oracle ~]#	groupadd -g 506	asmdba
[root@oracle ~]#	useradd	-u 502 -g oinstall -G dba,oper,asmdba oracle	#创建oracle用户
[root@oracle ~]#	passwd oracle		#设置密码
oracle
oracle
[root@oracle ~]#	useradd	-u 503 -g oinstall -G asmadmin,asmdba,asmoper,dba grid	#创建#grid用户（必须创建，高级的要用，低级的用不到）
[root@oracle ~]#	passwd grid	#设置grid密码
grid
grid
[root@oracle ~]#	id oracle
uid=502(oracle)	gid=500(oinstall) groups=500(oinstall),502(dba),503(oper),506(asmdba)
#oracle必须属于oinstall组，主组是oinstall，附加组是dba，oper，asmdba
[root@oracle ~]#	id grid
uid=503(grid) gid=500(oinstall)	groups=500(oinstall),502(dba),504(asmadmin),505(asmoper),506(asmdba)

或者使用脚本
[root@oracle ~]# vim groupuseradd.sh 
#!/bin/bash
groupadd oinstall
groupadd -g 502	dba
groupadd -g 503	oper
groupadd -g 504	asmadmin
groupadd -g 505	asmoper
groupadd -g 506	asmdba
useradd	-u 502 -g oinstall -G dba,oper,asmdba oracle
echo oracle | passwd --stdin oracle
useradd	-u 503 -g oinstall -G asmadmin,asmdba,asmoper,dba grid
echo grid | passwd --stdin grid
id oracle
id grid
[root@oracle ~]# sh groupuseradd.sh 
#用户和组创建完毕
-------------------------------------------------------------------------

#配置内核参数
[root@oracle ~]#	vim /etc/security/limits.conf 
#for oracle
oracle		soft	nproc		2047
oracle		hard	nproc		16384
oracle		soft	nofile		1024
oracle		hard	nofile		65536
oracle		soft	stack		10240
#for grid
grid		soft	nproc		2047
grid		hard	nproc		16384
grid		soft	nofile		1024
grid		hard	nofile		65536
grid		soft	stack		10240

#配置参数
[root@oracle ~]#	vim /etc/sysctl.conf	#这个参数是oracle工程师官方调优已经调到最好了
#for oracle softe
fs.aio-max-nr =	1048576
fs.file-max = 6815744
kernel.shmall =	2097152
kernel.shmmax =	4294967295 
kernel.shmmni =	4096
kernel.sem = 250 32000 100 128
net.ipv4.ip_local_port_range = 9000 65500
net.core.rmem_default =	262144
net.core.rmem_max = 4194304
net.core.wmem_default =	262144
net.core.wmem_max = 1048576
[root@oracle ~]#	sysctl -p	#改完后生效
-----------------------------------------------------------

#配置目录
#一共要建立3个目录，第一个是软件安装的根目录，第二个属于列表目录，第三个属于软件目录
[root@oracle ~]#	more /etc/oratab	#检查下服务器上有没有安装oracle软件
/etc/oratab: No	such file or directory
[root@oracle ~]#	mkdir -p /u01/app/oracle
[root@oracle ~]#	mkdir -p /u01/app/grid
[root@oracle ~]#	chown -R grid:oinstall /u01/
[root@oracle ~]#	chown -R oracle:oinstall /u01/app/oracle/
[root@oracle ~]#	chmod -R 775 /u01/		
[root@oracle ~]#	ll -d /u01/app/grid/		#检查一下
drwxrwxr-x. 2 grid oinstall 6 Oct  8	12:06 /u01/app/grid/
[root@oracle ~]#	 ll -d /u01/app/oracle/
drwxrwxr-x. 2 oracle oinstall 10 Oct	8 12:05	/u01/app/oracle/
#grid是用来管理实例的，而实例是用来管理数据库的

#使用脚本创建目录
[root@oracle ~]# vim mkdir.sh 
#!/bin/bash
more /etc/oratab
mkdir -p /u01/app/{oracle,grid}
chown -R grid:oinstall /u01/
chown -R oracle:oinstall /u01/app/oracle/
chmod -R 775 /u01/
ls -ld /u01/app/grid/
ls -ld /u01/app/oracle/
[root@oracle ~]# sh mkdir.sh 

---------------------------------------------------------------

#关闭selinux和iptables
[root@oracle ~]# chkconfig iptables off
[root@oracle ~]# service iptables stop
[root@oracle ~]# setenforce 0
[root@oracle ~]# vim /etc/selinux/config
SELINUX=disabled

#配置用户的环境变量
#2个用户oracle和grid都要配置环境变量
[root@oracle ~]#	cd /home/oracle/      #分别到用户的家目录下修改
[root@oracle oracle]# vim .bash_profile
export ORACLE_BASE=/u01/app/oracle
export ORACLE_SID=orcl			#实例的名字
export ORACLE_HOME=$ORACLE_BASE/product/11.1.0/dbhome_1		#oracle	软件安装目录
export PATH=$ORACLE_HOME/bin:$PATH
[root@oracle oracle]# . .bash_profile
[root@oracle oracle]# cd	/home/grid/
[root@oracle grid]# vim .bash_profile
export ORACLE_BASE=/u01/app/grid
export ORACLE_SID=+ASM			#ASM实例
export ORACLE_HOME=$ORACLE_BASE/product/11.2.0/grid		#grid 软件安装目录
export PATH=$ORACLE_HOME/bin:$PATH
[root@oracle grid]# . .bash_profile

#到现在为止就搭建了一个oracle所需要的安装环境
-------------------------------------------------------------------------------------
#Oracle安装思路
#Oracle要使用ASM作为存储必须安装2个软件，先装grid，再安装oracle软件，最后建库
#配置客户端，最后用户连接，一定要按照这个顺序去安装
[root@oracle ~]#	grep MemTotal /proc/meminfo	#检查内存，建议2G
MemTotal:	 1922680 kB
[root@oracle ~]#	grep SwapTotal /proc/meminfo	#检查swap
SwapTotal:	 4194296 kB
[root@oracle ~]#	df -hT /u01	#检查u01目录
Filesystem             Type  Size  Used Avail Use% Mounted on
/dev/mapper/rhel-lvu01 xfs    30G   33M   30G   1% /u01
---------------------------------------------------
#开始安装驱动
[root@oracle-server ~]#	uname -rm	#检查内核版本
3.10.0-229.el7.x86_64 x86_64		
http://www.oracle.com/technetwork/topics/linux/asmlib/index-101839.html	下载驱动，点击Red Hat Enterprise Linux	7，然后点击
Intel EM64T (x86_64) Architecture，下载oracleasm-support-2.1.8-3.el7.x86_64.rpm和oracleasmlib-2.0.12-1.el7.x86_64.rpm两个包
#oracleasm-lib,oracleasm_support,kmod-oracleasm。经过查找官方资料，发现oracle kernel包在redhat 6下已经集成在操纵系统中，无需下载安装。安装oracleasm-lib时会依赖kmod-oracleasm
[root@oracle-server ~]#	mkdir /disk
[root@oracle ~]#	chmod -R 777 /disk/
[root@oracle-server ~]#	yum install kmod-oracleasm
[root@oracle-server disk]# ls		#把这两个包放到disk文件夹（自己定）
oracleasm-support-2.1.8-1.el6.x86_64.rpm
oracleasmlib-2.0.4-1.el6.x86_64.rpm
[root@oracle-server disk]# rpm -ivh *
-------------------------------------------------------这样驱动就装好了
[root@oracle-server disk]# rpm -qa | grep oracleasm	#检查一下
kmod-oracleasm-2.0.6.rh1-2.el6.x86_64
oracleasmlib-2.0.4-1.el6.x86_64
oracleasm-support-2.1.8-1.el6.x86_64
#接下来配置asm驱动
[root@oracle-server disk]# cd
[root@oracle-server ~]#	/etc/init.d/oracleasm configure
Configuring the	Oracle ASM library driver.

This will configure the	on-boot	properties of the Oracle ASM library
driver.	 The following questions will determine	whether	the driver is
loaded on boot and what	permissions it will have.  The current values
will be	shown in brackets ('[]').  Hitting <ENTER> without typing an
answer will keep that current value.  Ctrl-C will abort.

Default	user to	own the	driver interface []: grid
Default	group to own the driver	interface []: asmadmin
Start Oracle ASM library driver	on boot	(y/n) [n]: y
Scan for Oracle	ASM disks on boot (y/n)	[y]: y
Writing	Oracle ASM library driver configuration: done
Initializing the Oracle	ASMLib driver:			   [  OK  ]
Scanning the system for	Oracle ASMLib disks:		   [  OK  ]
[root@oracle-server ~]#	oracleasm status		#检查ASM是否准备完毕
Checking if ASM	is loaded: yes
Checking if /dev/oracleasm is mounted: yes
[root@oracle-server ~]#	mount		#发现最后一行已经挂载上了
...
oracleasmfs on /dev/oracleasm type oracleasmfs (rw)



#关闭虚拟机，添加5块硬盘用20G。3块磁盘装数据库，2块磁盘做恢复文件
[root@oracle-server ~]#	fdisk -l
...
Disk /dev/sdb: 21.5 GB,	21474836480 bytes
...
Disk /dev/sdc: 21.5 GB,	21474836480 bytes
...
Disk /dev/sdd: 21.5 GB,	21474836480 bytes
...
Disk /dev/sde: 21.5 GB,	21474836480 bytes
...
Disk /dev/sdf: 21.5 GB,	21474836480 bytes
...
#分区：一个硬盘一个分区
[root@oracle-server ~]#	fdisk /dev/sdb
n
p
1
回车
回车
w
[root@oracle-server ~]#	partprobe /dev/sdb	#生效
#剩下的sdc，sdd，sde，sdf都按这个步骤完成。
#划分完毕后一定要检查
[root@oracle-server ~]#	fdisk -l
...
   Device Boot	    Start	  End	   Blocks   Id	System
/dev/sdb1		1	 2610	 20964793+  83	Linux
...
   Device Boot	    Start	  End	   Blocks   Id	System
/dev/sdc1		1	 2610	 20964793+  83	Linux
...
   Device Boot	    Start	  End	   Blocks   Id	System
/dev/sdd1		1	 2610	 20964793+  83	Linux
...
   Device Boot	    Start	  End	   Blocks   Id	System
/dev/sde1		1	 2610	 20964793+  83	Linux
...
   Device Boot	    Start	  End	   Blocks   Id	System
/dev/sdf1		1	 2610	 20964793+  83	Linux
#检查完毕后把5个分区做成asm磁盘
[root@oracle-server ~]#	oracleasm createdisk DISK1 /dev/sdb1
Writing	disk header: done
Instantiating disk: done
[root@oracle-server ~]#	oracleasm createdisk DISK2 /dev/sdc1
Writing	disk header: done
Instantiating disk: done
[root@oracle-server ~]#	oracleasm createdisk DISK3 /dev/sdd1
Writing	disk header: done
Instantiating disk: done
[root@oracle-server ~]#	oracleasm createdisk DISK4 /dev/sde1
Writing	disk header: done
Instantiating disk: done
[root@oracle-server ~]#	oracleasm createdisk DISK5 /dev/sdf1
Writing	disk header: done
Instantiating disk: done
#这样我们就把刚才的5个磁盘全部变成ASM磁盘
[root@oracle-server ~]#	oracleasm listdisks	#检查磁盘配置好没
DISK1
DISK2
DISK3
DISK4
DISK5
--------------------------------------------------------
#下载grid软件，上传到/disk目录（一定上传完整安装包），解压
[root@oracle-server disk]# ls
linux.x64_11gR2_grid.zip
[root@oracle-server disk]# su -	grid
[grid@oracle-server ~]$	cd /disk/
[grid@oracle-server disk]# unzip linux.x64_11gR2_grid.zip 
[grid@oracle-server disk]$ cd /disk/grid/
[grid@oracle-server grid]$ ls
doc  install  response	rpm  runcluvfy.sh  runInstaller	 sshsetup  stage  welcome.html
[grid@oracle-server grid]$ export DISPLAY=192.168.56.1:0.0
[grid@oracle-server grid]$ xhost +
access control disabled, clients can connect from any host
[grid@oracle-server grid]$ ./runInstaller

后面安装截图在安装目录里面

[root@oracle-server lib64]# ls libcap*
libcap-ng.so.0 libcap-ng.so.0.0.0 libcap.so.2 libcap.so.2.16
[root@oracle-server lib64]# ln -s libcap.so.2.16 libcap.so.1		#如果不执行这个，则会报下面的错误
执行脚本时报错
[root@oracle64 lib64]# /u01/app/oraInventory/orainstRoot.sh
Changing permissions of /u01/app/oraInventory.
Adding read,write permissions for group.
Removing read,write,execute permissions for world.

Changing groupname of /u01/app/oraInventory to oinstall.
The execution of the script is complete.
[root@oracle64 lib64]# /u01/app/grid/product/11.2.0/grid/root.sh
Running Oracle 11g root.sh script...
The following environment variables are set as:
    ORACLE_OWNER= grid
    ORACLE_HOME=  /u01/app/grid/product/11.2.0/grid
Enter the full pathname of the local bin directory: [/usr/local/bin]: 
   Copying dbhome to /usr/local/bin ...
   Copying oraenv to /usr/local/bin ...
   Copying coraenv to /usr/local/bin ...
Creating /etc/oratab file...
Entries will be added to the /etc/oratab file as needed by
Database Configuration Assistant when a database is created
Finished running generic part of root.sh script.
Now product-specific root actions will be performed.
2016-10-25 11:25:02: Checking for super user privileges
2016-10-25 11:25:02: User has super user privileges
2016-10-25 11:25:02: Parsing the host name
Using configuration parameter file: /u01/app/grid/product/11.2.0/grid/crs/install/crsconfig_params
Creating trace directory
/u01/app/grid/product/11.2.0/grid/bin/clscfg.bin: error while loading shared libraries: libcap.so.1: cannot open shared object file: No such file or directory
Failed to create keys in the OLR, rc = 32512, 32512
OLR configuration failed

#这个解决后还会继续报下面的错误		#11.2.0.1grid版本的bug
[root@oracle-server lib64]# /u01/app/grid/product/11.2.0/grid/root.sh
Running	Oracle 11g root.sh script...
The following environment variables are	set as:
    ORACLE_OWNER= grid
    ORACLE_HOME=  /u01/app/grid/product/11.2.0/grid
Enter the full pathname	of the local bin directory: [/usr/local/bin]: 
   Copying dbhome to /usr/local/bin ...
   Copying oraenv to /usr/local/bin ...
   Copying coraenv to /usr/local/bin ...
Creating /etc/oratab file...
Entries	will be	added to the /etc/oratab file as needed	by
Database Configuration Assistant when a	database is created
Finished running generic part of root.sh script.
Now product-specific root actions will be performed.
2016-03-11 11:57:48: Checking for super	user privileges
2016-03-11 11:57:48: User has super user privileges
2016-03-11 11:57:48: Parsing the host name
Using configuration parameter file: /u01/app/grid/product/11.2.0/grid/crs/install/crsconfig_params
Creating trace directory
LOCAL ADD MODE 
Creating OCR keys for user 'grid', privgrp 'oinstall'..
Operation successful.
CRS-4664: Node oracle-server successfully pinned.
Adding daemon to inittab
CRS-4124: Oracle High Availability Services startup failed.
CRS-4000: Command Start	failed,	or completed with errors.
ohasd failed to	start: Inappropriate ioctl for device
ohasd failed to	start: Inappropriate ioctl for device at /u01/app/grid/product/11.2.0/grid/crs/install/roothas.pl line 296.

#解决方法
#在执行root.sh脚本时出现Adding daemon to inittab的时候，使用root立即执行命令： 
/bin/dd	if=/var/tmp/.oracle/npohasd of=/dev/null bs=1024 count=1


[grid@oracle-server grid]$ cat /u01/app/oraInventory/ContentsXML/inventory.xml 
<?xml version="1.0" standalone="yes" ?>
<!-- Copyright (c) 1999, 2009, Oracle. All rights reserved. -->
<!-- Do not modify the contents of this file by hand. -->
<INVENTORY>
<VERSION_INFO>
   <SAVED_WITH>11.2.0.1.0</SAVED_WITH>
   <MINIMUM_VER>2.1.0.6.0</MINIMUM_VER>
</VERSION_INFO>
<HOME_LIST>
<HOME NAME="Ora11g_gridinfrahome1" LOC="/u01/app/grid/product/11.2.0/grid" TYPE="O" IDX="1" CRS="true"/>	#这就是我们的grid
</HOME_LIST>
</INVENTORY>
-----------------------------------------------------------------------

#grid软件安装完后我们接着装ASM磁盘组和FRA
#在grid用户下
#打开 xmanager-passive（之前打开了就不需要了）
[grid@oracle-server ~]$	export DISPLAY=192.168.56.1:0.0
[grid@oracle-server ~]$	xhost +
[grid@oracle-server ~]$	asmca
------------------------------------------------------------------------------------------


#上传
#开始装数据库oracle database 软件
#在oracle用户下
[root@oracle-server ContentsXML]# su - oracle
[oracle@oracle-server ~]$ cd /disk/
[oracle@oracle-server disk]$ unzip linux.x64_11gR2_database_1of2.zip
[oracle@oracle-server disk]$ unzip linux.x64_11gR2_database_2of2.zip 
[oracle@oracle-server disk]$ cd	database/
[oracle@oracle-server database]$ export	DISPLAY=192.168.56.1:0.0
[oracle@oracle-server database]$ xhost +
access control disabled, clients can connect from any host
[oracle@oracle-server database]$ ls
doc  install  response	rpm  runInstaller  sshsetup  stage  welcome.html
[oracle@oracle-server database]$ ./runInstaller	

#安装截图
#在root用户下执行这个脚本
[root@oracle-server ~]#	/u01/app/oracle/product/11.1.0/dbhome_1/root.sh
#然后继续安装
#安装完成，查看数据库软件装在什么地方
[root@oracle-server ~]#	cd /u01/app/oraInventory/ContentsXML/
[root@oracle-server ContentsXML]# ls
comps.xml  inventory.xml  libs.xml
[root@oracle-server ContentsXML]# cat inventory.xml 
<?xml version="1.0" standalone="yes" ?>
<!-- Copyright (c) 1999, 2009, Oracle. All rights reserved. -->
<!-- Do	not modify the contents	of this	file by	hand. -->
<INVENTORY>
<VERSION_INFO>
   <SAVED_WITH>11.2.0.1.0</SAVED_WITH>
   <MINIMUM_VER>2.1.0.6.0</MINIMUM_VER>
</VERSION_INFO>
<HOME_LIST>
<HOME NAME="Ora11g_gridinfrahome1" LOC="/u01/app/grid/product/11.2.0/grid" TYPE="O" IDX="1" CRS="true"/>
<HOME NAME="OraDb11g_home1" LOC="/u01/app/oracle/product/11.1.0/dbhome_1" TYPE="O" IDX="2"/>		#这就是oracle
</HOME_LIST>
</INVENTORY>

#现在开始建库。这个数据库软件是属于oracle用户的，而我们的库要建在oracle账号下面
[oracle@oracle-server database]$ cd
[oracle@oracle-server ~]$ vim .bash_profile 
export PATH=$ORACLE_HOME/bin:$PATH
[oracle@oracle-server ~]$ source .bash_profile
[oracle@oracle-server ~]$ export DISPLAY=192.168.56.1:0.0
[oracle@oracle-server ~]$ xhost	+
access control disabled, clients can connect from any host
[oracle@oracle-server ~]$ dbca	#dbca就是用来建库的
#建库建库
#截图

[grid@oracle-server ~]$	crs_stat -t -v		#在grid上一定要看目标状态和现在的状态都必须是ONLINE
Name	       Type	      R/RA   F/FT   Target    State	Host	    
----------------------------------------------------------------------
ora.DATA.dg    ora....up.type 0/5    0/	    ONLINE    ONLINE	orac...rver 
ora.FRA.dg     ora....up.type 0/5    0/	    ONLINE    ONLINE	orac...rver 
ora....ER.lsnr ora....er.type 0/5    0/	    ONLINE    ONLINE	orac...rver 
ora.asm	       ora.asm.type   0/5    0/	    ONLINE    ONLINE	orac...rver 
ora.cssd       ora.cssd.type  0/5    0/5    ONLINE    ONLINE	orac...rver 
ora.diskmon    ora....on.type 0/10   0/5    ONLINE    ONLINE	orac...rver 
ora.orcl.db    ora....se.type 0/2    0/1    ONLINE    ONLINE	orac...rver 
[oracle@oracle-server ~]$ sql		#在oracle看能不能登录进去
sqlite3	 sqlldr	  sqlldrO  sqlplus  
[oracle@oracle-server ~]$ sqlplus / as sysdba
SQL*Plus: Release 11.2.0.1.0 Production	on Sun Mar 13 22:11:44 2016
Copyright (c) 1982, 2009, Oracle.  All rights reserved.

Connected to:
Oracle Database	11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, Automatic Storage Management, OLAP, Data	Mining
and Real Application Testing options

SQL> 

#数据库环境刚刚搭建完毕，保存快照






















