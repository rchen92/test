##获取控制文件相关的视图
##控制文件在哪或有多少个：
##控制文件记录的内容：
	##这个当中只有一部分的内容
	##将二进制文件转换为我们能看懂的文件
	##库名、实例名、标识等等
	##当前数据库当中的数据文件和日志文件
	##系统中的表空间
	##日志文件的信息
	##数据文件的信息
	##转储控制文件内容
##作为一个DBA，上面的都不是经常要用的东西，重点的是下面的
##控制文件的管理
	##规划原则：多路复用
	##个数与位置管理
	##状态管理
	##备份管理
	##恢复管理
	##新建控制文件语句
##解决控制文件丢失
##非归档模式
##归档模式
	##归档且日志都在
		##不使用隐藏参数
		##使用隐藏参数
##归档但日志不全，重建日志文件。。。





database三要素：控制文件，日志文件，数据文件

控制文件：
	在参数文件中去定义控制文件的位置和个数，一般情况下，控制文件按照分散放开的原则来存放（硬盘有多个，在不同的硬盘上存放控制文件）

控制文件是数据库里面非常重要的一类文件，它记录了当前实例连接的数据库的结构和行为，并维护数据库的一致性。
	如何维护一致性？	因为在一个数据库当中，控制文件记录了启动的SCN号和终止的SCN号，这两个SCN号是一致的，那么数据库就不需要进行恢复，否则，就需要恢复之后才能打开。（在open阶段时会验证数据库的一致性，如果不一致，则不能open）
初始化参数文件中描述其位置
很小的二进制文件，一般不要超过100M
在mount的时候读，open一直在使用
控制文件只能连接一个database
丢失要恢复
最多8份，最少1份，是多个镜像文件的关系
初始化大小由CREATE DATABASE定义

控制文件包含以下内容：
	数据库名字和标识
	数据库创建的时间戳
	表空间名字
	数据文件和联机重做日志文件的位置和名字
	当前联机重做日志文件的sequence（序列）号码，即交易号码（当然是最新的）
	检查点信息
	回滚段的开始和结束
	联机重做日志的归档信息
	备份信息

获取控制文件相关的视图
	v$controlfile：列出实例的所有控制文件的名字和状态
	v$parameter：列出所有参数的位置和状态
	v$controlfile_record_section：提供控制文件的记录部分的信息
	show parameter control_file：列出控制文件的名字，状态，位置

控制文件在哪或有多少个：
	v$controlfile：列出实例的所有控制文件的名字和状态
	v$parameter：列出所有参数的位置和状态
	v$controlfile_record_section：提供控制文件的记录部分的信息
	show parameter control_file：列出控制文件的名字，状态，位置

SQL> show parameter control_file
NAME				     TYPE	 VALUE
------------------------------------ ----------- ------------------------------
control_file_record_keep_time	     integer	 7
control_files						 string	    /u01/app/oracle/oradata/orcl/control01.ctl, 
												/u01/app/oracle/flash_recovery_area/orcl/control02.ctl		#有两个控制文件
SQL> select name,value from v$parameter where name='control_files';
NAME			VALUE
--------------	--------------------------------------------------------------------------------
control_files	/u01/app/oracle/oradata/orcl/control01.ctl, /u01/app/oracle/flash_recovery_area/orcl/control02.ctl
SQL> select name,status from v$controlfile;
NAME															STATUS			#状态栏为空，说明控制文件是正常的
--------------------------------------------------------		-------	
/u01/app/oracle/oradata/orcl/control01.ctl
/u01/app/oracle/flash_recovery_area/orcl/control02.ctl


控制文件记录的内容：
	v$controlfile_record_section	#这个当中只有一部分的内容
	strings <conrtrol file>		#将二进制文件转换为我们能看懂的文件

	select controlfile_sequence# from v$database;
	select type,record_size,records_total,records_used from v$controlfile_record_section;
	select value,from v$spparameter where name like '%control%';

[oracle@oracle ~]$ strings $ORACLE_BASE/oradata/$ORACLE_SID/control01.ctl
}|{z											#库名、实例名、标识等等
VORCL
57 l
57ORCL
...
e)67H
57em
57em
/u01/app/oracle/oradata/orcl/redo03.log				#当前数据库当中的数据文件和日志文件
/u01/app/oracle/oradata/orcl/redo02.log
/u01/app/oracle/oradata/orcl/redo01.log
...
/u01/app/oracle/oradata/orcl/sysaux01.dbf
/u01/app/oracle/oradata/orcl/system01.dbf
/u01/app/oracle/oradata/orcl/temp01.dbf
/u01/app/oracle/oradata/orcl/example01.dbf
SYSTEM												#系统中的表空间
SYSAUX
...
UNDOTBS1
USERS
TEMP
EXAMPLE
...
...

SQL> alter database backup controlfile to trace as '/u01/ctl.txt';
[oracle@oracle ~]$ cat /u01/ctl.txt							#这个只能看一部分
-- The following are current System-scope REDO Log Archival related			#前面的注释文件可以不用看
-- parameters and can be included in the database initialization file.
....
-- protection mode:
--  ALTER DATABASE SET STANDBY DATABASE TO MAXIMIZE PERFORMANCE

STARTUP NOMOUNT
CREATE CONTROLFILE REUSE DATABASE "ORCL" NORESETLOGS  NOARCHIVELOG		#数据库实例名
    MAXLOGFILES 16				
    MAXLOGMEMBERS 3
    MAXDATAFILES 100
    MAXINSTANCES 8
    MAXLOGHISTORY 292
LOGFILE							#日志文件的信息
  GROUP 1 '/u01/app/oracle/oradata/orcl/redo01.log'  SIZE 50M BLOCKSIZE 512,
  GROUP 2 '/u01/app/oracle/oradata/orcl/redo02.log'  SIZE 50M BLOCKSIZE 512,
  GROUP 3 '/u01/app/oracle/oradata/orcl/redo03.log'  SIZE 50M BLOCKSIZE 512
-- STANDBY LOGFILE

DATAFILE						#数据文件的信息
  '/u01/app/oracle/oradata/orcl/system01.dbf',
  '/u01/app/oracle/oradata/orcl/sysaux01.dbf',
  '/u01/app/oracle/oradata/orcl/undotbs01.dbf',
  '/u01/app/oracle/oradata/orcl/users01.dbf',
  '/u01/app/oracle/oradata/orcl/example01.dbf'
CHARACTER SET AL32UTF8
;

-- Commands to re-create incarnation table
-- Below log names MUST be changed to existing filenames on
-- disk. Any one log file from each branch can be used to
-- re-create incarnation records.
-- ALTER DATABASE REGISTER LOGFILE '/u01/app/oracle/flash_recovery_area/ORCL/archivelog/2016_10_27/o1_mf_1_1_%u_.arc';
-- ALTER DATABASE REGISTER LOGFILE '/u01/app/oracle/flash_recovery_area/ORCL/archivelog/2016_10_27/o1_mf_1_1_%u_.arc';
-- Recovery is required if any of the datafiles are restored backups,
-- or if the last shutdown was not normal or immediate.
RECOVER DATABASE

-- Database can now be opened normally.
ALTER DATABASE OPEN;

-- Other tempfiles may require adjustment.
ALTER TABLESPACE TEMP ADD TEMPFILE '/u01/app/oracle/oradata/orcl/temp01.dbf'
     SIZE 30408704  REUSE AUTOEXTEND ON NEXT 655360  MAXSIZE 32767M;
-- End of tempfile additions.
--     Set #2. RESETLOGS case
-- The following commands will create a new control file and use it
...
ALTER TABLESPACE TEMP ADD TEMPFILE '/u01/app/oracle/oradata/orcl/temp01.dbf'
     SIZE 30408704  REUSE AUTOEXTEND ON NEXT 655360  MAXSIZE 32767M;
-- End of tempfile additions.
--

SQL> select type,record_size,records_total,records_used from v$controlfile_record_section;
TYPE			     RECORD_SIZE RECORDS_TOTAL RECORDS_USED			#现在可以清楚的看到记录了什么内容，以及这些内容的大小
---------------------------- ----------- ------------- ------------
DATABASE			     316	     1		  1
CKPT PROGRESS			    8180	    11		  0
REDO THREAD			     256	     8		  1
REDO LOG			      72	    16		  3
DATAFILE			     520	   100		  5
FILENAME			     524	  2298		  9
TABLESPACE			      68	   100		  6
TEMPORARY FILENAME		      56	   100		  1
RMAN CONFIGURATION		    1108	    50		  0
LOG HISTORY			      56	   292		 13
OFFLINE RANGE			     200	   163		  0
TYPE			     RECORD_SIZE RECORDS_TOTAL RECORDS_USED
---------------------------- ----------- ------------- ------------
ARCHIVED LOG			     584	    28		  0
BACKUP SET			      40	   409		  0
BACKUP PIECE			     736	   200		  0
...
37 rows selected.


转储控制文件内容
查看控制文件到底有什么内容
	alter session set events 'immediate trace name CONTROLF level 12';
		level 1表示头文件，2表述数据文件的内容，3表示1+2，12就是所有的内容
	或
	oradebug setmypid
	oradebug dump controlf 12;

SQL> alter session set events 'immediate trace name CONTROLF level 12';
SQL> select value from v$diag_info where name='Default Trace File';		#找到最新的文件
VALUE
--------------------------------------------------------------------------------
/u01/app/oracle/diag/rdbms/orcl/orcl/trace/orcl_ora_3262.trc
[oracle@oracle ~]$ cat /u01/app/oracle/diag/rdbms/orcl/orcl/trace/orcl_ora_3262.trc
Trace file /u01/app/oracle/diag/rdbms/orcl/orcl/trace/orcl_ora_3262.trc
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
ORACLE_HOME = /u01/app/oracle/product/11.1.0/dbhome_1
System name:	Linux
Node name:	oracle58.oracle58.com
Release:	2.6.32-300.10.1.el5uek
Version:	#1 SMP Wed Feb 22 17:37:40 EST 2012
Machine:	x86_64
Instance name: orcl
Redo thread mounted by this instance: 1
Oracle process number: 28
Unix process pid: 3262, image: oracle@oracle58.oracle58.com (TNS V1-V3)
 
DUMP OF CONTROL FILES, Seq # 1202 = 0x4b2			#把控制文件给转储的语句
 V10 STYLE FILE HEADER:
	Compatibility Vsn = 186646528=0xb200000
	Db ID=1454034745=0x56aacf39, Db Name='ORCL'
	Activation ID=0=0x0
	Control Seq=1202=0x4b2, File size=594=0x252
	File Number=0, Blksiz=16384, File Type=1 CONTROL
***************************************************************************
DATABASE ENTRY
***************************************************************************
 (size = 316, compat size = 316, section max = 1, section in-use = 1,
  last-recid= 0, old-recno = 0, last-recno = 0)
 (extent = 1, blkno = 1, numrecs = 1)
 10/26/2016 12:46:49
 DB Name "ORCL"
 Database flags = 0x00404000 0x00001000
 Controlfile Creation Timestamp  10/26/2016 12:46:50
 Incmplt recovery scn: 0x0000.00000000
 Resetlogs scn: 0x0000.000e6c20 Resetlogs Timestamp  10/26/2016 12:46:51
 Prior resetlogs scn: 0x0000.00000001 Prior resetlogs Timestamp  08/15/2009 00:16:43
 Redo Version: compatible=0xb200000
 #Data files = 5, #Online files = 5
 Database checkpoint: Thread=1 scn: 0x0000.00131d7c			#ckpt信息，启动的scn号
 Threads: #Enabled=1, #Open=1, Head=1, Tail=1
 enabled  threads:  01000000 00000000 00000000 00000000 00000000 00000000
...
...
DATABASE BLOCK CORRUPTION RECORDS
***************************************************************************
 (size = 80, compat size = 80, section max = 8384, section in-use = 0,
  last-recid= 0, old-recno = 0, last-recno = 0)
 (extent = 1, blkno = 218, numrecs = 8384)
*** END OF DUMP ***

SQL> alter session set events 'immediate trace name CONTROLF level 3';
SQL> oradebug setmypid
Statement processed.
SQL> select spid from v$process where addr=(select paddr from v$session where sid=(select sid from v$mystat where rownum=1));
SPID
------------------------
3262
SQL> oradebug dump controlf 3  
SQL> select value from v$diag_info where name='Default Trace File';		#找到最新的文件
VALUE
--------------------------------------------------------------------------------
/u01/app/oracle/diag/rdbms/orcl/orcl/trace/orcl_ora_3262.trc			#还是之前的3262文件



作为一个DBA，上面的都不是经常要用的东西，重点的是下面的
控制文件的管理
	规划原则：多路复用
	个数与位置管理
	状态管理
	备份管理
	恢复管理
	新建控制文件语句

	spfile或pfile都可以实现对控制文件的个数位置管理：
		spfile步骤：
			修改spfile参数control_files
			一致性关闭数据库
			增加或减少控制文件
			启动数据库使用spfile
			验证结果
		pfile步骤：
			一致性关闭数据库
			修改pfile参数
			增加或减少控制文件
			启动数据库使用pfile
			验证结果
SQL> show parameter control_f
NAME								TYPE	 VALUE
------------------------------------ ----------- ------------------------------
control_file_record_keep_time	     integer	 7
control_files						string		/u01/app/oracle/oradata/orcl/control01.ctl, 
												/u01/app/oracle/flash_recovery_area/orcl/control02.ctl
SQL> alter system set control_files='/u01/app/oracle/oradata/orcl/control01.ctl' scope=spfile;		#减少控制文件
SQL> shutdown immediate
Database closed.
Database dismounted.
ORACLE instance shut down.
SQL> startup mount		
SQL> show parameter control_f			#控制文件只剩下一个了
NAME							TYPE	 VALUE
------------------------------------ ----------- ------------------------------
control_file_record_keep_time	     integer	 7
control_files			     string	 /u01/app/oracle/oradata/orcl/control01.ctl
SQL> alter system set control_files='/u01/app/oracle/oradata/orcl/control01.ctl',
  2  '/u01/app/oracle/flash_recovery_area/orcl/control02.ctl' scope=spfile;			#增加控制文件
SQL> startup force
ORACLE instance started.
Total System Global Area  534462464 bytes
Fixed Size		    2215064 bytes
Variable Size		  402654056 bytes
Database Buffers	  125829120 bytes
Redo Buffers		    3764224 bytes
ORA-00214: control file '/u01/app/oracle/oradata/orcl/control01.ctl' version 1223 
inconsistent with file '/u01/app/oracle/flash_recovery_area/orcl/control02.ctl' version 1217
	#这个时候就报错了，数据库启动时上面的实例启动了，但是数据库没有mount。因为在mount阶段的时候需要读控制文件，而读控制文件的时候会判断控制文件的位置存不存在，版本是否一致。当前版本不一致导致不能启动，所以需要将版本号高的拷贝为版本号低的
SQL> ho cp /u01/app/oracle/oradata/orcl/control01.ctl /u01/app/oracle/flash_recovery_area/orcl/control02.ctl
SQL> alter database mount;		#现在数据库可以mount了
Database altered.
SQL> alter database open;
Database altered.

	状态管理：
		目的是看数据库使用的控制文件与参数定义的控制文件是否吻合。
		控制文件记录了数据库的结构和行为。每当数据库的机构修改就立刻更新当前正在用的控制文件。每到数据库启动到mount 都读控制文件并把数据库的结构对应到实际的文件上才能启动。
		
		存在状态、找位置和个数：
			show parameter control_f或string spfilesid.ora| grep control_f或grep control_f initsid.ora
			ho ls <filename>	比较位置和个数是否匹配
SQL> ho ls /u01/app/oracle/oradata/orcl/control01.ctl
/u01/app/oracle/oradata/orcl/control01.ctl
SQL> ho ls /u01/app/oracle/flash_recovery_area/orcl/control02.ctl
/u01/app/oracle/flash_recovery_area/orcl/control02.ctl
		
		大小状态：
			一个控制文件的大小会受一下参数的制约：
				maxdatafiles
				maxlogfiles
				maxlogmembers
				maxloghistory
				maxinstances
				rman等的信息也会影响其大小
			对DBA而言，关注controlfile的物理大小不要超过100M，如果接近100M应采取减少控制文件大小的措施处理

	备份管理：
		可以采用热备，rman备，冷备（基本上不用冷备的方法）
			热备：
				alter database backup controlfile to '<dir>';	#热备控制文件
				alter database backup controlfile to trace as '<dir>';	#得到建立控制文件的脚本
			rman备：
				backup current controlfile;
				backup database including current controlfiles
				或设置控制文件的自动备份
				RMAN> configure CONTROLFILE AUTOBACKUP on;
SQL> alter database backup controlfile to '/u01/app/oracle/control1028.bak';		#在归档模式下，才能直接复制回去使用就行
Database altered.
SQL> alter database backup controlfile to trace as '/u01/app/oracle/backctl.txt';	#在归档模式下，直接复制回去使用就行
Database altered.

[oracle@oracle ~]$ rman target /
RMAN> backup current controlfile;
Starting backup at 28-OCT-16
using target database control file instead of recovery catalog
...
piece handle=/u01/app/oracle/flash_recovery_area/ORCL/backupset/2016_10_28/o1_mf_ncnnf_TAG20161028T012209_d14fy50f_.bkp 
...
Finished backup at 28-OCT-16
RMAN> backup database include current controlfile;
Starting backup at 28-OCT-16
...
piece handle=/u01/app/oracle/flash_recovery_area/ORCL/backupset/2016_10_28/o1_mf_ncsnf_TAG20161028T012315_d14g04yc_.bkp tag=TAG20161028T012315 comment=NONE
...
ORA-19602: cannot backup or copy active file in NOARCHIVELOG mode			#报错是因为数据库不在归档模式下
RMAN> show all;
...
CONFIGURE CONTROLFILE AUTOBACKUP OFF; # default		#默认是关闭的
...
CONFIGURE SNAPSHOT CONTROLFILE NAME TO '/u01/app/oracle/product/11.1.0/dbhome_1/dbs/snapcf_orcl.f'; # default
	#打开后会自动备份到这
RMAN> CONFIGURE CONTROLFILE AUTOBACKUP on;		#这样打开就行了
new RMAN configuration parameters:
CONFIGURE CONTROLFILE AUTOBACKUP ON;
new RMAN configuration parameters are successfully stored

	恢复管理（后面数据库备份、恢复的时候详细的讲）
		如果控制文件丢失，不一致了，需要DBA处理
			解决不一致：
				确认控制的交易号码哪个比较新，哪个比较旧，将新的复制给旧的或直接修改参数control_file使用新的
			解决丢失：
				确认数据库是否是归档模式
					不是归档：先全备，然后建立新的控制文件即可
					归档且日志都在：先全备，使用备份的控制文件恢复即可
					归档但日志不全：先全备，然后建立新的控制文件
		新建控制文件语句：
			可以在数据库运行在mount及open的时候
			可以执行alter database backup controlfile to trace as '<dir>' 得到建立语句
			但要注意[no]archivelog [no]resetlog  2个参数的区别

#解决控制文件丢失
#非归档模式
SQL> shutdown immediate
[oracle@oracle ~]$ mv /u01/app/oracle/oradata/orcl/control01.ctl /u01/app/oracle/oradata/orcl/control01.ctl.bak
SQL> startup
ORACLE instance started.
...
ORA-00205: error in identifying control file, check alert log for more info		#控制文件丢失
[oracle@oracle ~]$ find /u01/app/oracle -name alert_orcl.log
/u01/app/oracle/diag/rdbms/orcl/orcl/trace/alert_orcl.log
[oracle@oracle ~]$ cat /u01/app/oracle/diag/rdbms/orcl/orcl/trace/alert_orcl.log	#查看alert日志，在最后查看
Fri Oct 28 02:00:18 2016
ALTER DATABASE   MOUNT
ORA-00210: cannot open the specified control file
ORA-00202: control file: '/u01/app/oracle/oradata/orcl/control01.ctl'		#这里会明确显示哪个控制文件
ORA-27037: unable to obtain file status
Linux-x86_64 Error: 2: No such file or directory							#出了什么问题
Additional information: 3
ORA-205 signalled during: ALTER DATABASE   MOUNT...
Fri Oct 28 02:00:18 2016
Checker run found 1 new persistent data failures
[oracle@oracle ~]$ ls /u01/app/oracle/oradata/orcl/control01.ctl
ls: /u01/app/oracle/oradata/orcl/control01.ctl: No such file or directory
SQL> show parameter control_f			#查看控制文件，发现只有一个，则是丢失所有控制文件
NAME				     TYPE	 VALUE
------------------------------------ ----------- ------------------------------
control_file_record_keep_time	     integer	 7
control_files			     string	 /u01/app/oracle/oradata/orcl/control01.ctl
	#现在数据库是非归档模式，不管有没有备份，都要建立新的控制文件
	#查清楚这个库当中有多少个数据文件，每个数据文件的路径在哪个地方; 数据库用了多少个日志文件
[oracle@oracle58 ~]$ ll /u01/app/oracle/oradata/orcl/ -h
total 1.6G
-rw-r----- 1 oracle oinstall 9.3M Oct 28 02:10 control01.ctl.bak
-rw-r----- 1 oracle oinstall 101M Oct 28 02:10 example01.dbf
-rw-r----- 1 oracle oinstall  51M Oct 28 02:08 redo01.log
-rw-r----- 1 oracle oinstall  51M Oct 28 02:08 redo02.log
-rw-r----- 1 oracle oinstall  51M Oct 28 02:10 redo03.log
-rw-r----- 1 oracle oinstall 541M Oct 28 02:10 sysaux01.dbf
-rw-r----- 1 oracle oinstall 681M Oct 28 02:10 system01.dbf
-rw-r----- 1 oracle oinstall  30M Oct 27 22:03 temp01.dbf
-rw-r----- 1 oracle oinstall 101M Oct 28 02:10 undotbs01.dbf
-rw-r----- 1 oracle oinstall 5.1M Oct 28 02:10 users01.dbf
[oracle@oracle ~]$ vim /u01/app/oracle/diag/rdbms/orcl/orcl/trace/alert_orcl.log		#找到下面的内容
Create controlfile reuse set database "orcl"
MAXINSTANCES 8
MAXLOGHISTORY 1
MAXLOGFILES 16
MAXLOGMEMBERS 3
MAXDATAFILES 100
SQL> create controlfile reuse database orcl noarchivelog noresetlogs
  2  maxlogfiles 16
  3  maxinstances 8
  4  maxlogmembers 3
  5  maxloghistory 1
  6  datafile
  7  '/u01/app/oracle/oradata/orcl/example01.dbf',
  8  '/u01/app/oracle/oradata/orcl/sysaux01.dbf',
  9  '/u01/app/oracle/oradata/orcl/system01.dbf',
 10  '/u01/app/oracle/oradata/orcl/undotbs01.dbf',
 11  '/u01/app/oracle/oradata/orcl/users01.dbf'
 12  logfile
 13  group 1 '/u01/app/oracle/oradata/orcl/redo01.log' size 50M,
 14  group 2 '/u01/app/oracle/oradata/orcl/redo02.log' size 50M,
 15  group 3 '/u01/app/oracle/oradata/orcl/redo03.log' size 50M
 16  character set utf8
 17  /
Control file created.			#创建完成，且这个时候数据库已经mount了
SQL> save /u01/app/oracle/sql/ctctl.sql			#把这个保存一下，以后要用可以修改此文件
Created file /u01/app/oracle/sql/ctctl.sql
SQL> alter database open;
alter database open
*
ERROR at line 1:
ORA-01113: file 1 needs media recovery
ORA-01110: data file 1: '/u01/app/oracle/oradata/orcl/system01.dbf'
SQL> recover database;
Media recovery complete.
SQL> alter database open;
Database altered.

#归档模式
	#归档且日志都在
SQL> shutdown immediate
SQL> startup mount
SQL> alter database archivelog;		#改为归档模式
Database altered.
SQL> alter database open;
Database altered.
SQL> archive log list;		
Database log mode	       Archive Mode		#确认是否为归档模式
Automatic archival	       Enabled
Archive destination	       USE_DB_RECOVERY_FILE_DEST
Oldest online log sequence     14
Next log sequence to archive   16
Current log sequence	       16
SQL> show parameter control_f
NAME				     TYPE	 VALUE
------------------------------------ ----------- ------------------------------
control_file_record_keep_time	     integer	 7
control_files						 string		/u01/app/oracle/oradata/orcl/control01.ctl, 
												/u01/app/oracle/flash_recovery_area/orcl/control02.ctl
SQL> alter database backup controlfile to '/u01/app/oracle/ctl1028.ctl';		#做完备份，来模拟控制文件丢失
Database altered.
SQL> shutdown immediate
[oracle@oracle orcl]$ mv /u01/app/oracle/oradata/orcl/control01.ctl /u01/app/oracle/oradata/orcl/control01.ctl.bak
[oracle@oracle orcl]$ mv control02.ctl control02.ctl.bak
SQL> startup
...
ORA-00205: error in identifying control file, check alert log for more info
[oracle@oracle ~]$ cat /u01/app/oracle/diag/rdbms/orcl/orcl/trace/alert_orcl.log
ORA-00202: control file: '/u01/app/oracle/flash_recovery_area/orcl/control02.ctl'
ORA-27037: unable to obtain file status
Linux-x86_64 Error: 2: No such file or directory
Additional information: 3
ORA-00210: cannot open the specified control file
ORA-00202: control file: '/u01/app/oracle/oradata/orcl/control01.ctl'
SQL> show parameter control_f
NAME				     TYPE	 VALUE
------------------------------------ ----------- ------------------------------
control_file_record_keep_time	     integer	 7
control_files						 string		/u01/app/oracle/oradata/orcl/control01.ctl, 
												/u01/app/oracle/flash_recovery_area/orcl/control02.ctl
[oracle@oracle ~]$ ls /u01/app/oracle/oradata/orcl/control01.ctl
ls: /u01/app/oracle/oradata/orcl/control01.ctl: No such file or directory
[oracle@oracle ~]$ ls /u01/app/oracle/flash_recovery_area/orcl/control02.ctl
ls: /u01/app/oracle/flash_recovery_area/orcl/control02.ctl: No such file or directory
SQL> ho cp /u01/app/oracle/ctl1028.ctl /u01/app/oracle/oradata/orcl/control01.ctl		#将备份的复制回去就行
SQL> ho cp /u01/app/oracle/ctl1028.ctl /u01/app/oracle/flash_recovery_area/orcl/control02.ctl
###不使用隐藏参数
SQL> alter database mount;		#现在能挂载了
SQL> alter database open;		#打开数据库时报错
alter database open
*
ERROR at line 1:
ORA-01589: must use RESETLOGS or NORESETLOGS option for database open
SQL> alter database open resetlogs;
alter database open resetlogs
*
ERROR at line 1:
ORA-01156: recovery or flashback in progress may need access to files
SQL> shutdown immediate
SQL> startup
...
Database mounted.
ORA-01589: must use RESETLOGS or NORESETLOGS option for database open
SQL> alter database open resetlogs;
alter database open resetlogs
*
ERROR at line 1:
ORA-01113: file 1 needs media recovery
ORA-01110: data file 1: '/u01/app/oracle/oradata/orcl/system01.dbf'
SQL> alter database recover database using backup controlfile;
alter database recover database using backup controlfile
*
ERROR at line 1:
ORA-00279: change 1265000 generated at 10/28/2016 10:55:37 needed for thread 1
ORA-00289: suggestion :
/u01/app/oracle/flash_recovery_area/ORCL/archivelog/2016_10_28/o1_mf_1_16_%u_.ar
c
ORA-00280: change 1265000 for thread 1 is in sequence #16
SQL> shutdown immediate
ORA-01109: database not open
Database dismounted.
ORACLE instance shut down.
SQL> startup
ORACLE instance started.

Total System Global Area  534462464 bytes
Fixed Size		    2215064 bytes
Variable Size		  402654056 bytes
Database Buffers	  125829120 bytes
Redo Buffers		    3764224 bytes
Database mounted.
ORA-01589: must use RESETLOGS or NORESETLOGS option for database open


SQL> alter database open resetlogs;
alter database open resetlogs
*
ERROR at line 1:
ORA-01113: file 1 needs media recovery
ORA-01110: data file 1: '/u01/app/oracle/oradata/orcl/system01.dbf'


SQL> recover database;         
ORA-00283: recovery session canceled due to errors
ORA-01610: recovery using the BACKUP CONTROLFILE option must be done
SQL> recover database using backup controlfile;
ORA-00279: change 1265000 generated at 10/28/2016 10:55:37 needed for thread 1
ORA-00289: suggestion :
/u01/app/oracle/flash_recovery_area/ORCL/archivelog/2016_10_28/o1_mf_1_16_%u_.ar
c
ORA-00280: change 1265000 for thread 1 is in sequence #16
Specify log: {<RET>=suggested | filename | AUTO | CANCEL}
/u01/app/oracle/oradata/orcl/redo01.log					#一般输入第一个redo日志就行，如果不行就输入第二个
ORA-00279: change 1285820 generated at 10/28/2016 12:21:35 needed for thread 1
ORA-00289: suggestion :
/u01/app/oracle/flash_recovery_area/ORCL/archivelog/2016_10_28/o1_mf_1_17_%u_.ar
c
ORA-00280: change 1285820 for thread 1 is in sequence #17
ORA-00278: log file '/u01/app/oracle/oradata/orcl/redo01.log' no longer needed
for this recovery

Specify log: {<RET>=suggested | filename | AUTO | CANCEL}
/u01/app/oracle/oradata/orcl/redo02.log			#使用第二个redo日志恢复成功
Log applied.
Media recovery complete.
SQL> alter database open;    
alter database open
*
ERROR at line 1:
ORA-01589: must use RESETLOGS or NORESETLOGS option for database open
SQL> alter database open resetlogs;				#恢复成功
Database altered.

###使用隐藏参数
SQL> alter database mount;
SQL> alter database open;
alter database open
*
ERROR at line 1:
ORA-01589: must use RESETLOGS or NORESETLOGS option for database open
SQL> recover database;
ORA-00283: recovery session canceled due to errors
ORA-01610: recovery using the BACKUP CONTROLFILE option must be done
SQL> recover database using backup controlfile;
ORA-00283: recovery session canceled due to errors
ORA-19909: datafile 1 belongs to an orphan incarnation
ORA-01110: data file 1: '/u01/app/oracle/oradata/orcl/system01.dbf'
SQL> alter system set "_allow_resetlogs_corruption"=true scope=spfile;		#在这里修改参数文件
System altered.
SQL> shutdown immediate
SQL> startup
...
ORA-01589: must use RESETLOGS or NORESETLOGS option for database open
SQL> alter database open resetlogs;
alter database open resetlogs
*
ERROR at line 1:
ORA-01092: ORACLE instance terminated. Disconnection forced				#实例中断，退出，重新连接就行
ORA-00600: internal error code, arguments: [2662], [0], [1265008], [0],
[1286794], [4194432], [], [], [], [], [], []
Process ID: 9337
Session ID: 1 Serial number: 5
SQL> exit
[oracle@oracle58 ~]$ sqlplus / as sysdba			#现在恢复好了，但是还在使用一个隐藏参数，要把它关闭不使用才行
SQL> startup
ORACLE instance started.
Total System Global Area  534462464 bytes
Fixed Size		    2215064 bytes
Variable Size		  402654056 bytes
Database Buffers	  125829120 bytes
Redo Buffers		    3764224 bytes
Database mounted.
Database opened.
SQL> show parameter _allow
NAME				     TYPE	 VALUE
------------------------------------ ----------- ------------------------------
_allow_resetlogs_corruption	     boolean	 TRUE
SQL> alter system reset "_allow_resetlogs_corruption" scope=spfile sid='*';
SQL> archive log list;
Database log mode	       Archive Mode
Automatic archival	       Enabled
Archive destination	       USE_DB_RECOVERY_FILE_DEST
Oldest online log sequence     1
Next log sequence to archive   3
Current log sequence	       3


归档但日志不全，重建日志文件。。。









