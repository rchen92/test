#方式1：sqlldr
#方式2：通过external table。但是要注意，这个表不能进行DML操作，因为是外部表
#将fd表的内容导入到 hr下为fd1表





ORACLE表和数据类型
ORACLE基本数据类型
数值型
NUMBER(P,S)					数字类型			P为总位数，S为小数位，精度P<=38，长度0~22字节，范围10^130~10^126
BINARY_FLOAT				单精度浮点数类型	精度6位，在内存中占5个字节
BINARY_DOUBLE				双精度浮点数类型	精度13位，在内存中战9个字节
DECIMAL(P,S)/NUMBERIC(P,S)	数字类型			P为整数位，S为小数位
INTEGER/INT					整数类型			小的整数，NUMBER(38)
FLOAT						浮点数类型			双精度，NUMBER(38)
REAL						实数类型			精度更高，NUMBER(63)


[oracle@oracle ~]$ vim d.txt
1,A1,L1
2,A2,L2
3,A3
4,,L4
5,A5,L5
#将上面的文件加载到oracle数据库中去，有两种方式
	通过sql_load工具当中的sqlldr
	通过sql_load工具当中的oracle_load的external table(外部表)
名字叫做fd表
#方式1：sqlldr
[oracle@oracle ~]$ sqlplus scott/scott
SQL> ho cat /home/oracle/d.txt
1,A1,L1
2,A2,L2
3,A3
4,,L4
5,A5,L5
SQL> create table fd(id number(4),name varchar2(10),addr varchar2(10));
[oracle@oracle ~]$ vim load.ctl
load data
infile '/home/oracle/d.txt'
into table fd
append
fields terminated by ',' optionally enclosed by '"'
(id,name,addr)
[oracle@oracle58 ~]$ sqlldr scott/scott control=./load.ctl 
Commit point reached - logical record count 5
[oracle@oracle ~]$ sqlplus scott/scott
SQL> ho cat /home/oracle/d.txt
1,A1,L1
2,A2,L2
3,A3
4,,L4
5,A5,L5
SQL> select * from fd;		#但是这里面少了一行，3,A3
	ID NAME       ADDR
---------- ---------- ----------
	 1 A1	      L1
	 2 A2	      L2
	 4			  L4
	 5 A5	      L5
[oracle@oracle ~]$ vim load.ctl
load data
infile '/home/oracle/d.txt'
into table fd
truncate					#把append改为truncate，截断
fields terminated by ',' optionally enclosed by '"'
trailing nullcols								#添加这个参数
(id,name,addr)
[oracle@oracle ~]$ sqlldr scott/scott control=./load.ctl 
Commit point reached - logical record count 5
SQL> select * from fd;
	ID NAME       ADDR
---------- ---------- ----------
	 1 A1	      L1
	 2 A2	      L2
	 3 A3						#现在数据才存在
	 4			  L4
	 5 A5	      L5
#方式2：通过external table。但是要注意，这个表不能进行DML操作，因为是外部表
SQL> conn / as sysdba
Connected.
SQL> create directory ext as '/home/oracle/';
SQL> grant read,write on directory ext to scott;
SQL> ho cat /home/oracle/d.txt
1,A1,L1
2,A2,L2
3,A3
4,,L4
5,A5,L5
SQL> create table fd(id number(4),name varchar2(10),addr varchar2(10))
  2  organization external(
  3  type oracle_loader
  4  default directory ext
  5  access parameters(
  6  records delimited by newline
  7  fields terminated by "," optionally exclosed by '"'
  8  missling field values are null(id,name,addr)
  9  )
 10  location('d.txt')
 11  )
 12  reject limit unlimited;
Table created.
SQL> desc fd
 Name					   Null?    Type
 ----------------------------------------- -------- ----------------------------
 ID						    NUMBER(4)
 NAME						    VARCHAR2(10)
 ADDR						    VARCHAR2(10)
SQL> select * from fd;		#有报语法错误，则需要再修改
select * from fd
*
ERROR at line 1:
ORA-29913: error in executing ODCIEXTTABLEOPEN callout
ORA-29400: data cartridge error
KUP-00554: error encountered while parsing access parameters
KUP-01005: syntax error: found "identifier": expecting one of: "enclosed"
KUP-01008: the bad identifier was: exclosed
KUP-01007: at line 2 column 37
SQL> drop table fd purge;
SQL> create table fd(id number(4),name varchar2(10),addr varchar2(10))
  2  organization external(
  3  type oracle_loader
  4  default directory ext
  5  access parameters(
  6  records delimited by newline
  7  fields terminated by "," optionally enclosed by '"'
  8  missing field values are null(id,name,addr)
  9  )
 10  location('d.txt')
 11  )
 12  reject limit unlimited;
Table created.
SQL> select * from fd;
	ID NAME       ADDR
---------- ---------- ----------
	 1 A1	      L1
	 2 A2	      L2
	 3 A3
	 4			  L4
	 5 A5	      L5
SQL> insert into fd values(6,'A6','L6');		这个表不能进行DML操作，因为是外部表
insert into fd values(6,'A6','L6')
            *
ERROR at line 1:
ORA-30657: operation not supported on external organized table
SQL> ho echo "6,A6,L6" >> /home/oracle/d.txt
SQL> select * from fd;
	ID NAME       ADDR
---------- ---------- ----------
	 1 A1	      L1
	 2 A2	      L2
	 3 A3
	 4			  L4
	 5 A5	      L5
	 6 A6	      L6			#现在就有6了
SQL> create table fs1 as select * from fd;			#但是这种现在就能修改了
SQL> desc fs1;
 Name					   Null?    Type
 ----------------------------------------- -------- ----------------------------
 ID						    NUMBER(4)
 NAME						    VARCHAR2(10)
 ADDR						    VARCHAR2(10)
#以后可以用这种方法来迁移外部的任何数据，如excl文件，其他关系型数据库的数据迁移到oracle数据库，而且是万能的。

#将fd表的内容导入到 hr下为fd1表
SQL> create table fd1out
  2  organization external(type oracle_datapump default directory ext location('f1.dmp'))
  3  as select * from fd;
SQL> select * from fd1out;			#现在这个表就是外部表，但是外面的f1.dmp是二进制文件
	ID NAME       ADDR
---------- ---------- ----------
	 1 A1	      L1
	 2 A2	      L2
	 3 A3
	 4			  L4
	 5 A5	      L5
	 6 A6	      L6
SQL> ho file /home/oracle/f1.dmp
/home/oracle/f1.dmp: DBase 3 data file (1728095104 records)
SQL> conn / as sysdba
SQL> grant read,write on directory ext to hr;
SQL> conn hr/hr
Connected.
SQL> ho cp /home/oracle/f1.dmp /home/oracle/fdhr.dmp
SQL> create table fd1(id number(4),name varchar2(10),addr varchar2(10))
  2  organization external(
  3  type oracle_datapump
  4  default directory ext
  5  location ('fdhr.dmp')
  6  );
Table created.
SQL> select * from fd1;
	ID NAME       ADDR
---------- ---------- ----------
	 1 A1	      L1
	 2 A2	      L2
	 3 A3
	 4			  L4
	 5 A5	      L5
	 6 A6	      L6
SQL> conn scott/scott
SQL> copy from scott/scott@orcl to hr/hr@orcl create cotab using select * from scott.fd;		#还可以使用copy进行迁移
Array fetch/bind size is 15. (arraysize is 15)
Will commit when done. (copycommit is 0)
Maximum long size is 80. (long is 80)
Table COTAB created.
   6 rows selected from scott@orcl.
   6 rows inserted into COTAB.
   6 rows committed into COTAB at hr@orcl.
SQL> conn hr/hr
Connected.
SQL> desc cotab 
 Name					   Null?    Type
 ----------------------------------------- -------- ----------------------------
 ID						    NUMBER(4)
 NAME						    VARCHAR2(10)
 ADDR						    VARCHAR2(10)
#在设置arraysize之后，速度可以很快，数值越大速度越快
SQL> set arraysize 3000
SQL> copy from scott/scott@orcl to hr/hr@orcl create cotab1  using select * from scott.fd;		#这次速度比之前更块
Array fetch/bind size is 3000. (arraysize is 3000)
Will commit when done. (copycommit is 0)
Maximum long size is 80. (long is 80)
Table COTAB1 created.
   6 rows selected from scott@orcl.
   6 rows inserted into COTAB1.
   6 rows committed into COTAB1 at hr@orcl.








