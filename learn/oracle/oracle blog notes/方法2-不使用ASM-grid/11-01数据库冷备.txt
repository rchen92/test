冷备：数据库在关闭的状态下完成物理系统拷贝的过程
冷备更适合于非归档模式下
	首先在运行的库中得到数据库运行的所有的物理文件
	然后在计划内关闭数据库
	再执行拷贝物理文件到备份路径或者设备
	备份完成后，立即启动数据库，让其提供正常的服务

[oracle@oracle ~]$ sqlplus / as sysdba
SQL> show user;
USER is "SYS"
SQL> select name from v$database;		#库名
NAME
---------
ORCL
SQL> select instance_name from v$instance;		#实例名
INSTANCE_NAME
----------------
orcl
#查询当前库中有多少个物理文件
SQL> select name from v$datafile;		#查询数据文件
NAME
--------------------------------------------------------------------------------
/u01/app/oracle/oradata/orcl/system01.dbf
/u01/app/oracle/oradata/orcl/sysaux01.dbf
/u01/app/oracle/oradata/orcl/undotbs01.dbf
/u01/app/oracle/oradata/orcl/users01.dbf
/u01/app/oracle/oradata/orcl/example01.dbf
SQL> select name from v$tempfile;		#临时表空间文件
NAME
--------------------------------------------------------------------------------
/u01/app/oracle/oradata/orcl/temp01.dbf
SQL> select member from v$logfile;			#日志文件
MEMBER
--------------------------------------------------------------------------------
/u01/app/oracle/oradata/orcl/redo03.log
/u01/app/oracle/oradata/orcl/redo02.log
/u01/app/oracle/oradata/orcl/redo01.log
SQL> select name from v$controlfile;		#控制文件
NAME
--------------------------------------------------------------------------------
/u01/app/oracle/oradata/orcl/control01.ctl
/u01/app/oracle/flash_recovery_area/orcl/control02.ctl
SQL> show parameter spfile;
NAME				     TYPE	 VALUE
------------------------------------ ----------- ------------------------------
spfile				     string	 /u01/app/oracle/product/11.1.0/dbhome_1/dbs/spfileorcl.ora			#参数文件
SQL> create pfile=['/backup/orcl/initorcl.ora'] from spfile[='/u01/app/oracle/pruduct/11.1.0/dbhome_1/dbs/spfileorcl.ora];
[oracle@oracle ~]$ vim /backup/bakorcl.txt
select 'ho cp '||name||' /backup/orcl/' from v$controlfile
union all
select 'ho cp '||name||' /backup/orcl/' from v$datafile
union all
select 'ho cp '||name||' /backup/orcl/' from v$tempfile
union all
select 'ho cp '||member||' /backup/orcl/' from v$logfile
/
create pfile='/backup/orcl/initorcl.ora' from spfile;
ho cp /u01/app/oracle/product/11.1.0/dbhome_1/dbs/orapworcl /backup/orcl/
SQL> spool /backup/bakorcl
SQL> @/backup/bakorcl.txt
SQL> spool off
[oracle@oracle ~]$ sed -n '/^ho cp/p' /backup/bakorcl.lst > /tmp/bakorcl.sql
SQL> shutdown immediate
SQL> @/tmp/bakorcl.sql
[oracle@oracle ~]$ ls /backup/orcl/
control01.ctl  d101.dbf  d301.dbf  d501.dbf       initorcl.ora  redo01.log  redo03.log    system01.dbf  tt.dbf         users01.dbf
control02.ctl  d201.dbf  d401.dbf  example01.dbf  orapworcl     redo02.log  sysaux01.dbf  temp01.dbf    undotbs01.dbf
SQL> startup


#将上面的所有步骤全部使用脚本来执行
[oracle@oracle ~]$ vim /backup/bakorcl.sql
spool /tmp/bak.sql
set linesize 100
select 'ho cp '||name||' /backup/orcl`date +%Y%m%d`/' from v$controlfile
union all
select 'ho cp '||name||' /backup/orcl`date +%Y%m%d`/' from v$datafile
union all
select 'ho cp '||name||' /backup/orcl`date +%Y%m%d`/' from v$tempfile
union all
select 'ho cp '||member||' /backup/orcl`date +%Y%m%d`/' from v$logfile
/
ho mkdir /backup/orcl`date +%Y%m%d`
create pfile='/backup/initorcl.ora' from spfile;
ho mv /backup/initorcl.ora /backup/orcl`date +%Y%m%d`/
ho cp /u01/app/oracle/product/11.1.0/dbhome_1/dbs/orapworcl /backup/orcl`date +%Y%m%d/`
spool off
ho sed -n '/^ho cp/p' /tmp/bak.sql > /tmp/bakorcl.sql
shutdown immediate
@/tmp/bakorcl.sql
ho rm /tmp/bak*.sql
startup
exit
[oracle@oracle ~]$ sqlplus / as sysdba  @ /backup/bakorcl.sql
[oracle@oracle ~]$ ls /backup/orcl20161118/
control01.ctl  d101.dbf  d301.dbf  d501.dbf       initorcl.ora  redo01.log  redo03.log    system01.dbf  tt.dbf         users01.dbf
control02.ctl  d201.dbf  d401.dbf  example01.dbf  orapworcl     redo02.log  sysaux01.dbf  temp01.dbf    undotbs01.dbf








