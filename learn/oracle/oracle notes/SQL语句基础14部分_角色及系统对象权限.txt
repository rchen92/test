sql2
#控制用户访问
	权限
	角色
---------------------------
#如何查看权限

---------------------------
#权限分配
	1、系统权限：操作的数据库本身	（常见命令：CREATE TABLE）
	2、对象权限：针对的内容	（常见命令：INSERT UPDATE DELETE）
--------------------------
#Schemas：
	Schemas方案：Collection 集合 of objects such as tables,views,and sequences
	一般，方案名和用户名相同
	（#注：假设建立了一个用户名叫TOM，也就等于建立了一个方案叫TOM。同理，如果把TOM删除，也就等于把TOM下面所有的方案全部删除）
--------------------------
#默认系统权限超过100个（不用全部都学）
	首先，谁的权限最大？肯定是sysdba，他能够新建用户，编辑用户，删除用户，创建表，备份表，等等。反正什么都能干。
------------------------
#如何建立用户
#建议在创建用户之前看一下到底有多少个用户，sysdba下执行 SELECT username FROM dba_users;
-----------------------
	SQL> CREATE USER tom IDENTIFIED BY oracle;		#新建一个tom
	User created.
	SQL> conn tom/oracle;		#不能登录，没有权限
	ERROR:
	ORA-01045: user TOM lacks CREATE SESSION privilege; logon denied
	Warning: You are no longer connected to ORACLE.
	SQL> show user;
	USER is ""
	SQL> conn / as sysdba;
	SQL> GRANT connect to tom;	GRANT create session TO tom;		#授予用户登录数据库权限
	Grant succeeded.
	SQL> conn tom/oracle;
	SQL> CREATE TABLE xs(id number);		#没有创建的权限
	CREATE TABLE xs(id number)
	*
	ERROR at line 1:
	ORA-01031: insufficient privileges
	SQL> conn / as sysdba;
	SQL> GRANT CREATE TABLE TO tom;			#授予用户创建表的权限
	Grant succeeded.
	SQL> conn tom/oracle;
-----------------------------
#授权：授予系统权限
#语法：
	GRANT 系统权限列表,... TO 用户、角色、public
		publi=everyone	（工作的时候最好不要用这个public）
-----------------------
#例子：授予tom建立会话，建表，建视图的权限
	GRANT CREATE session,create table,create view TO tom;
-----------------------
#再次扩展：假设我们这会儿公司有5000多开发人员，每个开发人员都要登录到oracle进行开发，那么这会儿我们的DBA仅授权就会很累
#这会就要学习角色
#可以把权限集合到一个角色
------------------------
#语法例子
	1、创建角色
	CREATE ROLE hello;
	2、给角色分配权限
	GRANT CREATE TABLE TO hello;
	GRANT SELECT ON scott.emp TO hello;
	3、把角色赋予制定用户
	GRANT hello to user;
	4、删除角色
	DROP ROLE hello;
-----------------------------
#扩展：假设tom想对scott.emp有查看，删除，更新权限，但是只能更新ename字段。
#授予对象权限语法：
	GRANT 对象权限 ON 对象名 TO user/role/public

	SQL> conn / as sysdba
	SQL> GRANT SELECT,DELETE,UPDATE(ename) ON scott.emp TO tom
	Grant succeeded.
---------------------------
#授予权限
	GRANT 系统权限 TO user/role/public
	GRANT 对象权限 ON 对象名 TO user/role/public
#撤销
	REVOKE 系统权限 FROM user/role/public
	REVOKE 对象权限 ON 对象名 FROM user/role/public
------------------------------
	#做个准备工作
		SQL> REVOKE SELECT ON dept FROM public;
		SQL> REVOKE CREATE view FROM scott;		#把之前授予的权限全部收回来
	#开始授权
		SQL> GRANT SELECT,DELETE,UPDATE(last_name,first_name) ON hr.employees TO scott;
		SQL> GRANT SELECT,DELETE,UPDATE(ename,sal) ON scott.emp TO hr;
		SQL> CREATE role r2;
		SQL> GRANT CREATE view to r2;
		SQL> GRANT r2 TO scott;
#假设刚刚上面的操作不是你做的，请问scott到底能做什么（提示：scott到底能做什么取决于角色/系统权限/对象权限）

	管理公户、角色和权限的DBA视图
	DBA_USERS			提供用户的信息
	DBA_ROLES			显示数据库中所有角色
	DBA_COL_PRIVS		显示列级对象权限
	DBA_ROLE_PRIVS		显示用户及其角色
	DBA_SYS_PRIVS		显示被授予系统权限的用户
	DBA_TAB_PRIVS		显示用户及他们在表上的权限
	ROLE_ROLE_PRIVS		显示授予角色的角色

	ROLE_SYS_PRIVS		显示授予角色的系统权限
	ROLE_TAB_PRIVS		显示授予角色的表权限
	USER_ROLE_PRIVS		显示授予角色的用户权限
	USER_SYS_PRIVS		显示授予用户的系统权限
	USER_TAB_PRIVS_MADE	显示用户有没有授予别人表的权限
	USER_TAB_PRIVS_RECD	显示别人有没有授予用户表的权限
	USER_COL_PRIVS_MADE	显示用户有没有授予别人列的权限
	USER_COL_PRIVS_RECD	显示别人有没有授予用户列的权限

	SQL> show user;
	USER is "SYS"
	SQL> SELECT * FROM user_sys_privs;		#user_sys_privs只能看用户自己的系统权限
	USERNAME		       PRIVILEGE				ADM
	------------------------------ ---------------------------------------- ---
	SYS			       UPDATE ANY CUBE BUILD PROCESS		NO
	SYS			       CREATE MINING MODEL			NO
	......
	SYS			       BACKUP ANY TABLE 			NO
	SYS			       MANAGE TABLESPACE			NO
	200 rows selected.
	SQL> SELECT * FROM dba_sys_privs;		#dba_sys_privs能看所有用户的系统权限
	GRANTEE 		       PRIVILEGE				ADM
	------------------------------ ---------------------------------------- ---
	GRANTEE 		       PRIVILEGE				ADM
	------------------------------ ---------------------------------------- ---
	DBA			       CREATE SESSION				YES
	......
	SYS			       MANAGE FILE GROUP			NO
	......
	IMP_FULL_DATABASE	       DROP ANY LIBRARY 			NO
	DATAPUMP_IMP_FULL_DATABASE     ALTER RESOURCE COST			NO
	......
	SPATIAL_WFS_ADMIN_USR	       CREATE ROLE				NO
	......
	BI			       CREATE SEQUENCE				NO
	R2			       CREATE VIEW				NO
	839 rows selected.
#scott有哪些权限
	SQL> alter user scott account unlock identified by oracle;		#如果没有解锁，则要先解锁
	SQL> CONN scott/oracle
	Connected.
	SQL> DESC user_sys_privs;
	 Name					   Null?    Type
	 ----------------------------------------- -------- ----------------------------
	 USERNAME					    VARCHAR2(30)
	 PRIVILEGE				   NOT NULL VARCHAR2(40)
	 ADMIN_OPTION					    VARCHAR2(3)
	SQL> SELECT * FROM user_sys_privs;		#一般都是先看系统权限
	USERNAME		       PRIVILEGE				ADM
	------------------------------ ---------------------------------------- ---
	SCOTT			       UNLIMITED TABLESPACE（使用任意表空间）			NO
	SQL> SELECT * FROM user_role_privs;
	USERNAME		       GRANTED_ROLE		      ADM DEF OS_
	------------------------------ ------------------------------ --- --- ---
	SCOTT			       CONNECT			      NO  YES NO
	SCOTT			       R2			      NO  YES NO
	SCOTT			       RESOURCE 		      NO  YES NO
	SQL> SELECT * FROM role_sys_privs;
	ROLE			       PRIVILEGE				ADM
	------------------------------ ---------------------------------------- ---
	RESOURCE		       CREATE SEQUENCE				NO
	RESOURCE		       CREATE TRIGGER				NO
	RESOURCE		       CREATE CLUSTER				NO
	RESOURCE		       CREATE PROCEDURE 			NO
	RESOURCE		       CREATE TYPE				NO
	CONNECT 		       CREATE SESSION				NO
	RESOURCE		       CREATE OPERATOR				NO
	RESOURCE		       CREATE TABLE				NO
	RESOURCE		       CREATE INDEXTYPE 			NO
	R2					   CREATE VIEW				NO

	SQL> DESC user_tab_privs_recd;
	 Name					   Null?    Type
	 ----------------------------------------- -------- ----------------------------
	 OWNER					   NOT NULL VARCHAR2(30)
	 TABLE_NAME				   NOT NULL VARCHAR2(30)
	 GRANTOR				   NOT NULL VARCHAR2(30)
	 PRIVILEGE				   NOT NULL VARCHAR2(40)
	 GRANTABLE					    VARCHAR2(3)
	 HIERARCHY					    VARCHAR2(3)
	SQL> SELECT owner,grantor,table_name,privilege
	  2  FROM user_tab_privs_recd;
	OWNER			       GRANTOR
	------------------------------ ------------------------------
	TABLE_NAME		       PRIVILEGE
	------------------------------ ----------------------------------------
	HR			       HR
	EMPLOYEES		       SELECT

	HR			       HR
	EMPLOYEES		       DELETE
	SQL> col owner for a10
	SQL> col grantor for a10
	SQL> col table_name for a15
	SQL> col privilege for a10
	SQL> /
	OWNER	   GRANTOR    TABLE_NAME      PRIVILEGE
	---------- ---------- --------------- ----------
	HR	   HR	      EMPLOYEES       SELECT		hr账号授予了hr账号里面的employees的查看权限给当前用户
	HR	   HR	      EMPLOYEES       DELETE		hr账号授予了hr账号里面的employees的删除权限给当前用户
	SQL> show user;
	USER is "SCOTT"
	SQL> DESC user_col_privs_recd;
	 Name					   Null?    Type
	 ----------------------------------------- -------- ----------------------------
	 OWNER					   NOT NULL VARCHAR2(30)
	 TABLE_NAME				   NOT NULL VARCHAR2(30)
	 COLUMN_NAME				   NOT NULL VARCHAR2(30)
	 GRANTOR				   NOT NULL VARCHAR2(30)
	 PRIVILEGE				   NOT NULL VARCHAR2(40)
	 GRANTABLE					    VARCHAR2(3)
	SQL> SELECT owner,grantor,table_name,column_name,privilege
	  2  FROM user_col_privs_recd;
	OWNER	   GRANTOR    TABLE_NAME      COLUMN_NAME		     PRIVILEGE
	---------- ---------- --------------- --------------- ----------
	HR	   HR	      EMPLOYEES      FIRST_NAME		UPDATE		#hr账号授予了hr账号里面的employees的first_name列的更新权限给当前用户
	HR	   HR	      EMPLOYEES      LAST_NAME 		UPDATE		#hr账号授予了hr账号里面的employees的last_name列的更新权限给当前用户

	SQL> DESC user_tab_privs_made;
	 Name					   Null?    Type
	 ----------------------------------------- -------- ----------------------------
	 GRANTEE				   NOT NULL VARCHAR2(30)
	 TABLE_NAME				   NOT NULL VARCHAR2(30)
	 GRANTOR				   NOT NULL VARCHAR2(30)
	 PRIVILEGE				   NOT NULL VARCHAR2(40)
	 GRANTABLE					    VARCHAR2(3)
	 HIERARCHY					    VARCHAR2(3)
	SQL> SELECT grantor,grantee,table_name,privilege
	  2  FROM user_tab_privs_made;
	GRANTOR    GRANTEE			  TABLE_NAME	  PRIVILEGE
	---------- ------------------------------ --------------- ----------
	SCOTT	   TOM				  EMP		  DELETE	#scott授予tom用户能够删除emp表的权限
	SCOTT	   TOM				  EMP		  SELECT	#scott授予tom用户能够查看emp表的权限
	SCOTT	   HR				  EMP		  SELECT	#scott授予hr用户能够查看emp表的权限
	SCOTT	   HR				  EMP		  DELETE	#scott授予hr用户能够删除emp表的权限
	SQL> DESC user_col_privs_made;
	 Name					   Null?    Type
	 ----------------------------------------- -------- ----------------------------
	 GRANTEE				   NOT NULL VARCHAR2(30)
	 TABLE_NAME				   NOT NULL VARCHAR2(30)
	 COLUMN_NAME				   NOT NULL VARCHAR2(30)
	 GRANTOR				   NOT NULL VARCHAR2(30)
	 PRIVILEGE				   NOT NULL VARCHAR2(40)
	 GRANTABLE					    VARCHAR2(3)
	SQL> col grantee for a10
	SQL> col column_name for a10
	SQL> SELECT grantor,grantee,table_name,column_name,privilege
	  2  FROM user_col_privs_made;
	GRANTOR    GRANTEE    TABLE_NAME      COLUMN_NAM PRIVILEGE
	---------- ---------- --------------- ---------- ----------
	SCOTT	   HR	      EMP	      SAL	 UPDATE		#scott授予hr用户能够对emp表里面的sal列的更新权限
	SCOTT	   HR	      EMP	      ENAME	 UPDATE		#scott授予hr用户能够对emp表里面的ename列的更新权限
	SCOTT	   TOM	      EMP	      ENAME	 UPDATE		#scott授予tom用户能够对emp表里面的ename列的更新权限






